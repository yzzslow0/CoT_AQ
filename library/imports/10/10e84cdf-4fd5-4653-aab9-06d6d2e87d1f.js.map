{"version":3,"sources":["assets/Script/Game.js"],"names":["Black","Red","cc","Class","extends","Component","properties","chessPrefab","default","type","Prefab","chessList","node","whiteSpriteFrame","SpriteFrame","blackSpriteFrame","touchChess","Node","visible","the_last_touchChess","btn_test","Button","isDestory","Boolean","pzChess","names","String","positionX","Integer","positionY","Red_names","Black_names","onLoad","i","self","isMove","y","x","newNode","instantiate","addChild","parseInt","random0To1","length","flag","number","log","splice","setPosition","p","zIndex","tag","push","getComponent","game","on","EventType","TOUCH_START","event","setChess","TOUCH_END","isDestoryfunction","TOUCH_MOVE","delta","touch","getDelta","Sprite","spriteFrame","update","dt","btn_test_func","newNode_onClick","console","test_label","getComponentInChildren","Label","color","Color","string","getChessHZ","destoryChess","other","notdestoryChess","position","X","Y","opacity"],"mappings":";;;;;;;;;;AAAA,IAAIA,QAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,EAAoD,EAApD,CAAZ;AACA,IAAIC,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,EAAoD,EAApD,CAAV;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC;;AAEIC,qBAAa,EAAC;AACVC,qBAAS,IADA;AAETC,kBAAMP,GAAGQ;AAFA,SAFjB;;AAOIC,mBAAW,EAAC;AACRH,qBAAS,EADF;AAEPC,kBAAM,CAACP,GAAGU,IAAJ;AAFC,SAPf;;AAYIC,0BAAkB,EAAC;AACfL,qBAAS,IADK;AAEdC,kBAAMP,GAAGY;AAFK,SAZtB;;AAiBIC,0BAAkB,EAAC;AACfP,qBAAS,IADK;AAEdC,kBAAMP,GAAGY;AAFK,SAjBtB;;AAsBIE,oBAAY,EAAC;AACTR,qBAAS,IADD;AAERC,kBAAMP,GAAGe,IAFD;AAGRC,qBAAS,KAHD,CAGM;AAHN,SAtBhB;;AA4BIC,6BAAqB;AACjBX,qBAAS,IADQ;AAEjBC,kBAAMP,GAAGe,IAFQ;AAGjBC,qBAAS,KAHQ,CAGH;AAHG,SA5BzB;;AAkCIE,kBAAUlB,GAAGmB,MAlCjB;AAmCIC,mBAAWpB,GAAGqB,OAnClB;;AAqCIC,iBAAS,EAAC;AACNhB,qBAAS,IADJ;AAELC,kBAAMP,GAAGe,IAFJ;AAGLC,qBAAS;AAHJ,SArCb;AA0CIO,eAAO;AACHjB,qBAAS,EADN;AAEHC,kBAAM,CAACP,GAAGwB,MAAJ;AAFH,SA1CX;;AAgDIC,mBAAW;AACPnB,qBAAS,EADF;AAEPC,kBAAM,CAACP,GAAG0B,OAAJ;AAFC,SAhDf;AAoDIC,mBAAW;AACPrB,qBAAS,EADF;AAEPC,kBAAM,CAACP,GAAG0B,OAAJ;AAFC,SApDf;AAwDI;AACA;AACAE,mBAAW,CAAC5B,GAAGwB,MAAJ,CA1Df;AA2DIK,qBAAa,CAAC7B,GAAGwB,MAAJ;AA3DjB,iDA4De,CAACxB,GAAG0B,OAAJ,CA5Df,6CA6De,CAAC1B,GAAG0B,OAAJ,CA7Df,wCA+DU,CAAC1B,GAAG0B,OAAJ,CA/DV,eAHK;;AA0EL;AACAI,YAAQ,kBAAY;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,YAAIC,IAAI,CAAR;AACA,YAAIC,OAAO,IAAX;AACA,YAAIC,SAAS,KAAb;AACA;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxB,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxB,oBAAIC,UAAUpC,GAAGqC,WAAH,CAAe,KAAKhC,WAApB,CAAd,CADwB,CACuB;AAC/C,qBAAKK,IAAL,CAAU4B,QAAV,CAAmBF,OAAnB;;AAEA,oBAAIG,SAASvC,GAAGwC,UAAH,KAAkB,CAA3B,KAAiC,CAArC,EAAwC;;AAEpC,wBAAIzC,IAAI0C,MAAJ,GAAa,CAAjB,EAAoB;AAChB;AACAT,6BAAKU,IAAL,CAAUX,CAAV,IAAe,CAAf;AACA,4BAAIY,SAASJ,SAASvC,GAAGwC,UAAH,KAAkBzC,IAAI0C,MAA/B,CAAb,CAHgB,CAGqC;AACrDzC,2BAAG4C,GAAH,CAAO,OAAO7C,IAAI4C,MAAJ,CAAd;AACAX,6BAAKJ,SAAL,CAAeG,CAAf,IAAoBhC,IAAI4C,MAAJ,CAApB;AACA5C,4BAAI8C,MAAJ,CAAWF,MAAX,EAAmB,CAAnB;AACH,qBAPD,MAOO;AACH;AACAX,6BAAKU,IAAL,CAAUX,CAAV,IAAe,CAAf;;AAEA,4BAAIY,SAASJ,SAASvC,GAAGwC,UAAH,KAAkB1C,MAAM2C,MAAjC,CAAb,CAJG,CAIoD;AACvDzC,2BAAG4C,GAAH,CAAO,OAAO9C,MAAM6C,MAAN,CAAd;AACAX,6BAAKH,WAAL,CAAiBE,CAAjB,IAAsBjC,MAAM6C,MAAN,CAAtB;AACA7C,8BAAM+C,MAAN,CAAaF,MAAb,EAAqB,CAArB;AACH;AAEJ,iBAnBD,MAmBO;AACH,wBAAI7C,MAAM2C,MAAN,GAAe,CAAnB,EAAsB;AAClB;AACAT,6BAAKU,IAAL,CAAUX,CAAV,IAAe,CAAf;;AAEA,4BAAIY,SAASJ,SAASvC,GAAGwC,UAAH,KAAkB1C,MAAM2C,MAAjC,CAAb,CAJkB,CAIqC;AACvDzC,2BAAG4C,GAAH,CAAO,OAAO9C,MAAM6C,MAAN,CAAd;AACAX,6BAAKH,WAAL,CAAiBE,CAAjB,IAAsBjC,MAAM6C,MAAN,CAAtB;AACA7C,8BAAM+C,MAAN,CAAaF,MAAb,EAAqB,CAArB;AACH,qBARD,MAQO;AACH;AACAX,6BAAKU,IAAL,CAAUX,CAAV,IAAe,CAAf;AACA,4BAAIY,SAASJ,SAASvC,GAAGwC,UAAH,KAAkBzC,IAAI0C,MAA/B,CAAb,CAHG,CAGkD;AACrDzC,2BAAG4C,GAAH,CAAO,OAAO7C,IAAI4C,MAAJ,CAAd;AACAX,6BAAKJ,SAAL,CAAeG,CAAf,IAAoBhC,IAAI4C,MAAJ,CAApB;AACA5C,4BAAI8C,MAAJ,CAAWF,MAAX,EAAmB,CAAnB;AACH;AACJ;;AAEDX,qBAAKP,SAAL,CAAeM,CAAf,IAAoB,CAACI,IAAI,CAAL,IAAU,GAAV,GAAgB,GAApC;AACAH,qBAAKL,SAAL,CAAeI,CAAf,IAAoB,CAACG,IAAI,CAAL,IAAU,GAAV,GAAgB,GAApC;;AAEAE,wBAAQU,WAAR,CAAoB9C,GAAG+C,CAAH,CAAKf,KAAKP,SAAL,CAAeM,CAAf,CAAL,EAAwBC,KAAKL,SAAL,CAAeI,CAAf,CAAxB,CAApB,EA7CwB,CA6CwC;;;AAGhEK,wBAAQY,MAAR,GAAiB,CAAjB,CAhDwB,CAgDL;AACnB;AACAZ,wBAAQa,GAAR,GAAclB,CAAd;;AAGA,qBAAKtB,SAAL,CAAeyC,IAAf,CAAoBd,OAApB;AACAA,wBAAQe,YAAR,CAAqB,IAArB,EAA2BC,IAA3B,GAAkC,IAAlC;;AAEA;AACA;;;AAGAhB,wBAAQiB,EAAR,CAAWrD,GAAGe,IAAH,CAAQuC,SAAR,CAAkBC,WAA7B,EAA0C,UAAUC,KAAV,EAAiB;AACvD,yBAAKR,MAAL,GAAc,GAAd,CADuD,CACrC;AAClBhB,yBAAKlB,UAAL,GAAkB,IAAlB;AACAkB,yBAAKZ,SAAL,GAAiB,KAAjB;;AAEAY,yBAAKP,SAAL,CAAe,KAAKwB,GAApB,IAA2B,KAAKd,CAAhC;AACAH,yBAAKL,SAAL,CAAe,KAAKsB,GAApB,IAA2B,KAAKf,CAAhC;;AAEA;AACAF,yBAAKyB,QAAL,CAAczB,KAAKU,IAAL,CAAU,KAAKO,GAAf,CAAd;;AAGA;AACA,wBAAIjB,KAAKf,mBAAL,IAA4B,IAA5B,IAAoCe,KAAKlB,UAAL,CAAgBmC,GAAhB,IAAuBjB,KAAKf,mBAAL,CAAyBgC,GAAxF,EAA6F;AACzFhB,iCAAS,IAAT;AACH;;AAED;AACA;AACA;AACA;AACH,iBArBD;;AAuBA;;;AAGAG,wBAAQiB,EAAR,CAAWrD,GAAGe,IAAH,CAAQuC,SAAR,CAAkBI,SAA7B,EAAwC,UAAUF,KAAV,EAAiB;;AAErD,yBAAKR,MAAL,GAAc,CAAd,CAFqD,CAErC;;AAEhBhB,yBAAKf,mBAAL,GAA2B,IAA3B;AACAe,yBAAKf,mBAAL,CAAyBgC,GAAzB,GAA+BjB,KAAKlB,UAAL,CAAgBmC,GAA/C,CALqD,CAKF;AACnDhB,6BAAS,KAAT;;AAEAD,yBAAK2B,iBAAL,CAAuB3B,KAAKP,SAAL,CAAe,KAAKwB,GAApB,CAAvB,EAAiDjB,KAAKL,SAAL,CAAe,KAAKsB,GAApB,CAAjD;AAEH,iBAVD;;AAYA;;;AAGAb,wBAAQiB,EAAR,CAAWrD,GAAGe,IAAH,CAAQuC,SAAR,CAAkBM,UAA7B,EAAyC,UAAUJ,KAAV,EAAiB;AACtD;AACA,wBAAIvB,MAAJ,EAAY;AACR,4BAAI4B,QAAQL,MAAMM,KAAN,CAAYC,QAAZ,EAAZ;AACA,6BAAK5B,CAAL,IAAU0B,MAAM1B,CAAhB;AACA,6BAAKD,CAAL,IAAU2B,MAAM3B,CAAhB;AACH;AAEJ,iBARD;AASA,qBAAKzB,SAAL,CAAesB,CAAf,EAAkBoB,YAAlB,CAA+BnD,GAAGgE,MAAlC,EAA0CC,WAA1C,GAAwD,KAAKtD,gBAA7D;AACAoB;AACH;AAEJ;AAIJ,KAnOI;AAoOL;AACAmC,YAAQ,gBAAUC,EAAV,EAAc;AAClB,aAAKjD,QAAL,CAAcR,IAAd,CAAmB2C,EAAnB,CAAsBrD,GAAGe,IAAH,CAAQuC,SAAR,CAAkBC,WAAxC,EAAqD,KAAKa,aAA1D,EAAyE,IAAzE;AACH,KAvOI;;AA2OLC,qBAAiB,2BAAY;AACzBC,gBAAQ1B,GAAR,CAAYR,QAAQa,GAApB;AACA;AACH,KA9OI;;AAmPLQ,cAAU,kBAAUf,IAAV,EAAgB;AACtB,YAAI6B,aAAa,KAAKzD,UAAL,CAAgB0D,sBAAhB,CAAuCxE,GAAGyE,KAA1C,CAAjB;AACAH,gBAAQ1B,GAAR,CAAY,KAAK9B,UAAL,CAAgBmC,GAA5B;AACA,YAAIP,QAAQ,CAAZ,EAAe;AACX6B,uBAAW7D,IAAX,CAAgBgE,KAAhB,GAAwB,IAAI1E,GAAG2E,KAAP,CAAa,GAAb,EAAkB,CAAlB,EAAqB,CAArB,CAAxB;AACAJ,uBAAWK,MAAX,GAAoB,KAAKC,UAAL,CAAgB,KAAKjD,SAAL,CAAe,KAAKd,UAAL,CAAgBmC,GAA/B,CAAhB,EAAqD,CAArD,CAApB;AACH,SAHD,MAGO;AACHsB,uBAAW7D,IAAX,CAAgBgE,KAAhB,GAAwB,IAAI1E,GAAG2E,KAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAxB;AACAJ,uBAAWK,MAAX,GAAoB,KAAKC,UAAL,CAAgB,KAAKhD,WAAL,CAAiB,KAAKf,UAAL,CAAgBmC,GAAjC,CAAhB,EAAuD,CAAvD,CAApB;AACH;;AAID;;AAGH,KAnQI;AAoQLmB,mBAAe,uBAAUZ,KAAV,EAAiB;AAC5B,aAAKL,YAAL,CAAkBnD,GAAGyE,KAArB,EAA4BG,MAA5B,GAAqC,KAArC;AACH,KAtQI;;AAwQLE,kBAAc,sBAAUC,KAAV,EAAiB/C,IAAjB,EAAuB;AACjC,aAAKZ,SAAL,GAAiB,IAAjB;AACA,YAAI,KAAKN,UAAL,CAAgBmC,GAAhB,IAAuB8B,MAAMrE,IAAN,CAAWuC,GAAtC,EAA2C;AAAE;AACzC,iBAAK3B,OAAL,GAAeU,KAAKtB,IAApB;AACH,SAFD,MAEO;AACH,iBAAKY,OAAL,GAAeyD,MAAMrE,IAArB;AACH;AACD;AACH,KAhRI;;AAkRLsE,qBAAiB,yBAAUD,KAAV,EAAiB/C,IAAjB,EAAuB;AACpC,aAAKZ,SAAL,GAAiB,KAAjB;AACH,KApRI;;AAsRLyD,gBAAY,oBAAUI,QAAV,EAAoBvC,IAApB,EAA0B;AAClC,gBAAQuC,QAAR;AACI;AACA,iBAAK,CAAL;AACI,oBAAIvC,QAAQ,CAAZ,EAAe;AACX,2BAAO,GAAP;AACH,iBAFD,MAEO;AACH,2BAAO,GAAP;AACH;AACL,iBAAK,CAAL;AACI,uBAAO,GAAP;AACJ,iBAAK,CAAL;AACI,uBAAO,GAAP;AACJ,iBAAK,EAAL;AACI,uBAAO,GAAP;AACJ,iBAAK,EAAL;AACI,oBAAIA,QAAQ,CAAZ,EAAe;AACX,2BAAO,GAAP;AACH,iBAFD,MAEO;AACH,2BAAO,GAAP;AACH;AACL,iBAAK,EAAL;AACI,oBAAIA,QAAQ,CAAZ,EAAe;AACX,2BAAO,GAAP;AACH,iBAFD,MAEO;AACH,2BAAO,GAAP;AACH;AACL,iBAAK,EAAL;AACI,oBAAIA,QAAQ,CAAZ,EAAe;AACX,2BAAO,GAAP;AACH,iBAFD,MAEO;AACH,2BAAO,GAAP;AACH;AA/BT;AAkCH,KAzTI;;AA2TLiB,uBAAmB,2BAAUuB,CAAV,EAAaC,CAAb,EAAgB;AAC/B,YAAI,KAAK/D,SAAT,EAAoB;AAChBpB,eAAG4C,GAAH,CAAO,IAAP;AACA,iBAAK9B,UAAL,CAAgBqB,CAAhB,GAAoB,KAAKb,OAAL,CAAaa,CAAjC;AACA,iBAAKrB,UAAL,CAAgBoB,CAAhB,GAAoB,KAAKZ,OAAL,CAAaY,CAAjC;;AAEA,gBAAI,KAAKQ,IAAL,CAAU,KAAK5B,UAAL,CAAgBmC,GAA1B,KAAkC,CAAlC,IAAuC,KAAKP,IAAL,CAAU,KAAKpB,OAAL,CAAa2B,GAAvB,KAA+B,CAA1E,EAA6E;AACzE;AACA,oBAAI,KAAKrB,SAAL,CAAe,KAAKd,UAAL,CAAgBmC,GAA/B,IAAsC,KAAKpB,WAAL,CAAiB,KAAKP,OAAL,CAAa2B,GAA9B,CAA1C,EAA8E;AAC1E;;;;AAIA;AACA;AACA;;;AAIH,iBAXD,MAWO,IAAI,KAAKrB,SAAL,CAAe,KAAKd,UAAL,CAAgBmC,GAA/B,KAAuC,KAAKpB,WAAL,CAAiB,KAAKP,OAAL,CAAa2B,GAA9B,CAA3C,EAA+E;AAClFjD,uBAAG4C,GAAH,CAAO,cAAP;;AAGA,yBAAKtB,OAAL,CAAa8D,OAAb,GAAuB,CAAvB;AACA;;;AAIA,yBAAKvD,WAAL,CAAiB,KAAKP,OAAL,CAAa2B,GAA9B,IAAqC,KAAK3B,OAAL,CAAaa,CAAb,GAAe,EAApD;AACH,iBAVM,MAUA;AACHnC,uBAAG4C,GAAH,CAAO,UAAP;AACA,yBAAK9B,UAAL,CAAgBqB,CAAhB,GAAoB+C,CAApB;AACA,yBAAKpE,UAAL,CAAgBoB,CAAhB,GAAoBiD,CAApB;AACH;AACJ,aA5BD,MA4BO,IAAI,KAAKzC,IAAL,CAAU,KAAK5B,UAAL,CAAgBmC,GAA1B,KAAkC,CAAlC,IAAuC,KAAKP,IAAL,CAAU,KAAKpB,OAAL,CAAa2B,GAAvB,KAA+B,CAA1E,EAA6E;AAChF;AACA,oBAAI,KAAKpB,WAAL,CAAiB,KAAKf,UAAL,CAAgBmC,GAAjC,IAAwC,KAAKrB,SAAL,CAAe,KAAKN,OAAL,CAAa2B,GAA5B,CAA5C,EAA8E;AAC1E,yBAAK3B,OAAL,CAAa8D,OAAb,GAAuB,CAAvB;;AAGA;AACA,yBAAKxD,SAAL,CAAe,KAAKN,OAAL,CAAa2B,GAA5B,IAAmC,KAAK3B,OAAL,CAAaa,CAAb,GAAe,EAAlD;AAIH,iBATD,MASO,IAAI,KAAKN,WAAL,CAAiB,KAAKf,UAAL,CAAgBmC,GAAjC,KAAyC,KAAKrB,SAAL,CAAe,KAAKN,OAAL,CAAa2B,GAA5B,CAA7C,EAA+E;;AAElFjD,uBAAG4C,GAAH,CAAO,cAAP;;AAGA,yBAAKtB,OAAL,CAAa8D,OAAb,GAAuB,CAAvB;AACA;;;AAIA,yBAAKxD,SAAL,CAAe,KAAKN,OAAL,CAAa2B,GAA5B,IAAmC,KAAK3B,OAAL,CAAaa,CAAb,GAAe,EAAlD;AACH,iBAXM,MAWA;AACHnC,uBAAG4C,GAAH,CAAO,UAAP;AACA,yBAAK9B,UAAL,CAAgBqB,CAAhB,GAAoB+C,CAApB;AACA,yBAAKpE,UAAL,CAAgBoB,CAAhB,GAAoBiD,CAApB;AACH;AACJ,aA3BM,MA2BA;AACHnF,mBAAG4C,GAAH,CAAO,OAAP;AACA,qBAAK9B,UAAL,CAAgBqB,CAAhB,GAAoB+C,CAApB;AACA,qBAAKpE,UAAL,CAAgBoB,CAAhB,GAAoBiD,CAApB;AACH;AAEJ,SAlED,MAkEO;AACHnF,eAAG4C,GAAH,CAAO,KAAP;AACA,iBAAK9B,UAAL,CAAgBqB,CAAhB,GAAoB+C,CAApB;AACA,iBAAKpE,UAAL,CAAgBoB,CAAhB,GAAoBiD,CAApB;AACH;AACJ;AACD;AACA;;AAEA;AAvYK,CAAT","file":"unknown","sourcesContent":["var Black = [5, 5, 5, 5, 5, 6, 6, 8, 8, 10, 10, 12, 12, 14, 14, 15];\nvar Red = [5, 5, 5, 5, 5, 6, 6, 8, 8, 10, 10, 12, 12, 14, 14, 15];\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        chessPrefab: {//棋子的预制资源\n            default: null,\n            type: cc.Prefab\n        },\n\n        chessList: {//棋子节点的集合，用一维数组表示二维位置\n            default: [],\n            type: [cc.node]\n        },\n\n        whiteSpriteFrame: {//棋的图片\n            default: null,\n            type: cc.SpriteFrame\n        },\n\n        blackSpriteFrame: {//wu棋的图片\n            default: null,\n            type: cc.SpriteFrame\n        },\n\n        touchChess: {//每一回合点击的棋子\n            default: null,\n            type: cc.Node,\n            visible: false//属性窗口不显示\n        },\n\n        the_last_touchChess: {\n            default: null,\n            type: cc.Node,\n            visible: false//属性窗口不显示\n        },\n\n        btn_test: cc.Button,\n        isDestory: cc.Boolean,\n\n        pzChess: {//\n            default: null,\n            type: cc.Node,\n            visible: false\n        },\n        names: {\n            default: [],\n            type: [cc.String],\n            // 用 type 指定数组的每个元素都是字符串类型\n        },\n\n        positionX: {\n            default: [],\n            type: [cc.Integer]\n        },\n        positionY: {\n            default: [],\n            type: [cc.Integer]\n        },\n        // ChessModel:{\n        //     default:[],\n        Red_names: [cc.String],\n        Black_names: [cc.String],\n        positionX: [cc.Integer],\n        positionY: [cc.Integer],\n        // tag:[cc.Integer],\n        flag: [cc.Integer],\n\n\n\n\n        // }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        // isDestory =false;\n        // var key1 = '动态key1';\n        // var key2 = '动态key2';\n        // var map = {};\n        // map[key1] = 1;\n        // map[key2] = 2;\n\n        // console.log(map[key1]);//结果是1.\n        // console.log(map[key2]);//结果是2.m\n\n        // //如果遍历map\n        // for(var prop in map){\n        //     if(map.hasOwnProperty(prop)){\n        //         console.log('key is ' + prop +' and value is' + map[prop]);\n        //     }\n        // }\n\n        // var mChessModel = cc.Class({\n        //   positionX: 0,\n        //     positionY: 0,\n        //     tag: 0,\n        //     name: '',\n        //     flag: 0\n        // });\n\n        /**\n         * 创建棋子\n         */\n        var i = 0;\n        var self = this;\n        var isMove = false;\n        //初始化棋盘上225个棋子节点，并为每个节点添加事件\n        for (var y = 0; y < 4; y++) {\n            for (var x = 0; x < 8; x++) {\n                var newNode = cc.instantiate(this.chessPrefab);//复制Chess预制资源\n                this.node.addChild(newNode);\n\n                if (parseInt(cc.random0To1() * 2) == 0) {\n\n                    if (Red.length > 0) {\n                        //红色\n                        self.flag[i] = 0;\n                        var number = parseInt(cc.random0To1() * Red.length); //随机一位数\n                        cc.log('随机' + Red[number]);\n                        self.Red_names[i] = Red[number];\n                        Red.splice(number, 1);\n                    } else {\n                        //黑色\n                        self.flag[i] = 1;\n\n                        var number = parseInt(cc.random0To1() * Black.length); //随机一位数\n                        cc.log('随机' + Black[number]);\n                        self.Black_names[i] = Black[number];\n                        Black.splice(number, 1);\n                    }\n\n                } else {\n                    if (Black.length > 0) {\n                        //黑色\n                        self.flag[i] = 1;\n\n                        var number = parseInt(cc.random0To1() * Black.length); //随机一位数\n                        cc.log('随机' + Black[number]);\n                        self.Black_names[i] = Black[number];\n                        Black.splice(number, 1);\n                    } else {\n                        //红色\n                        self.flag[i] = 0;\n                        var number = parseInt(cc.random0To1() * Red.length); //随机一位数\n                        cc.log('随机' + Red[number]);\n                        self.Red_names[i] = Red[number];\n                        Red.splice(number, 1);\n                    }\n                }\n\n                self.positionX[i] = (x + 5) * 105 - 890;\n                self.positionY[i] = (y + 2) * 110 - 370;\n\n                newNode.setPosition(cc.p(self.positionX[i], self.positionY[i]));//根据棋盘和棋子大小计算使每个棋子节点位于指定位置\n\n\n                newNode.zIndex = 1;//层级管理   \n                // newNode.group = \"default\"\n                newNode.tag = i;\n\n\n                this.chessList.push(newNode);\n                newNode.getComponent('PZ').game = this;\n\n                // var mChessModel = new ChessModel();\n                /**\n                 * 点击 TOUCH_START\n                 */\n                newNode.on(cc.Node.EventType.TOUCH_START, function (event) {\n                    this.zIndex = 100;//层级管理   \n                    self.touchChess = this;\n                    self.isDestory = false;\n\n                    self.positionX[this.tag] = this.x;\n                    self.positionY[this.tag] = this.y;\n\n                    // cc.log(mChessModel.positionX+'----'+mChessModel.positionY);\n                    self.setChess(self.flag[this.tag]);\n\n\n                    //判断如果第一次点击与想要拖动的棋子为同一个 则允许拖动\n                    if (self.the_last_touchChess != null && self.touchChess.tag == self.the_last_touchChess.tag) {\n                        isMove = true;\n                    }\n\n                    //   this.label.string = '123321'\n                    //   newNode.addChild(label)\n                    // this.chessList[i].getComponent(cc.Sprite).spriteFrame = this.blackSpriteFrame;\n                    // cc.log('TOUCH_START:' + isMove)\n                });\n\n                /**\n                * 点击 TOUCH_END\n                */\n                newNode.on(cc.Node.EventType.TOUCH_END, function (event) {\n\n                    this.zIndex = 1;//层级管理       \n\n                    self.the_last_touchChess = this;\n                    self.the_last_touchChess.tag = self.touchChess.tag;// 赋值tag\n                    isMove = false;\n\n                    self.isDestoryfunction(self.positionX[this.tag], self.positionY[this.tag]);\n\n                });\n\n                /**\n                * 拖动 TOUCH_MOVE\n                */\n                newNode.on(cc.Node.EventType.TOUCH_MOVE, function (event) {\n                    //判断是否允许拖动\n                    if (isMove) {\n                        var delta = event.touch.getDelta();\n                        this.x += delta.x;\n                        this.y += delta.y;\n                    }\n\n                })\n                this.chessList[i].getComponent(cc.Sprite).spriteFrame = this.whiteSpriteFrame;\n                i++;\n            }\n\n        }\n\n\n\n    },\n    // called every frame\n    update: function (dt) {\n        this.btn_test.node.on(cc.Node.EventType.TOUCH_START, this.btn_test_func, this)\n    },\n\n\n\n    newNode_onClick: function () {\n        console.log(newNode.tag)\n        //  this.chessList[i].getComponent(cc.Sprite).spriteFrame = this.blackSpriteFrame;\n    },\n\n\n\n\n    setChess: function (flag) {\n        var test_label = this.touchChess.getComponentInChildren(cc.Label);\n        console.log(this.touchChess.tag)\n        if (flag == 0) {\n            test_label.node.color = new cc.Color(255, 0, 0);\n            test_label.string = this.getChessHZ(this.Red_names[this.touchChess.tag], 0);\n        } else {\n            test_label.node.color = new cc.Color(0, 0, 0);\n            test_label.string = this.getChessHZ(this.Black_names[this.touchChess.tag], 1);\n        }\n\n\n\n        //  this.chessList[this.touchChess.tag].getComponent(cc.Sprite).spriteFrame = this.blackSpriteFrame;\n\n\n    },\n    btn_test_func: function (event) {\n        this.getComponent(cc.Label).string = '123'\n    },\n\n    destoryChess: function (other, self) {\n        this.isDestory = true;\n        if (this.touchChess.tag == other.node.tag) { //有时候 不能分辨 是否是点中的棋子 判断棋子\n            this.pzChess = self.node;\n        } else {\n            this.pzChess = other.node;\n        }\n        // this.pzChess = other;\n    },\n\n    notdestoryChess: function (other, self) {\n        this.isDestory = false;\n    },\n\n    getChessHZ: function (position, flag) {\n        switch (position) {\n            // var Red = [5, 5, 5, 5, 5, 6, 6, 8, 8, 10, 10, 12, 12, 14, 14, 15];\n            case 5:\n                if (flag == 0) {\n                    return '兵';\n                } else {\n                    return '卒';\n                }\n            case 6:\n                return '炮';\n            case 8:\n                return '马';\n            case 10:\n                return '车';\n            case 12:\n                if (flag == 0) {\n                    return '相';\n                } else {\n                    return '象';\n                }\n            case 14:\n                if (flag == 0) {\n                    return '仕';\n                } else {\n                    return '士';\n                }\n            case 15:\n                if (flag == 0) {\n                    return '帅';\n                } else {\n                    return '将';\n                }\n        }\n\n    },\n\n    isDestoryfunction: function (X, Y) {\n        if (this.isDestory) {\n            cc.log('销毁')\n            this.touchChess.x = this.pzChess.x;\n            this.touchChess.y = this.pzChess.y;\n\n            if (this.flag[this.touchChess.tag] == 0 && this.flag[this.pzChess.tag] == 1) {\n                //红吃黑\n                if (this.Red_names[this.touchChess.tag] > this.Black_names[this.pzChess.tag]) {\n                    /**\n                     * 尝试 替换 prefab 以空节点来做\n                     */\n\n                    // this.pzChess.opacity = 0;\n                    // // this.pzChess.destroy();   //吃子\n                    // this.Black_names[this.pzChess.tag] = this.pzChess.x*10;\n\n\n\n                } else if (this.Red_names[this.touchChess.tag] == this.Black_names[this.pzChess.tag]) {\n                    cc.log('不同色同样的棋子--销毁')\n\n\n                    this.pzChess.opacity = 0;\n                    // this.pzChess.destroy();   //吃子\n\n\n\n                    this.Black_names[this.pzChess.tag] = this.pzChess.x*10;\n                } else {\n                    cc.log('红吃黑--不销毁')\n                    this.touchChess.x = X;\n                    this.touchChess.y = Y;\n                }\n            } else if (this.flag[this.touchChess.tag] == 1 && this.flag[this.pzChess.tag] == 0) {\n                //黑吃红\n                if (this.Black_names[this.touchChess.tag] > this.Red_names[this.pzChess.tag]) {\n                    this.pzChess.opacity = 0;\n\n\n                    // this.pzChess.destroy();   //吃子\n                    this.Red_names[this.pzChess.tag] = this.pzChess.x*10;\n\n\n\n                } else if (this.Black_names[this.touchChess.tag] == this.Red_names[this.pzChess.tag]) {\n\n                    cc.log('不同色同样的棋子--销毁')\n\n\n                    this.pzChess.opacity = 0;\n                    // this.pzChess.destroy();   //吃子\n\n\n\n                    this.Red_names[this.pzChess.tag] = this.pzChess.x*10;\n                } else {\n                    cc.log('黑吃红--不销毁')\n                    this.touchChess.x = X;\n                    this.touchChess.y = Y;\n                }\n            } else {\n                cc.log('同色不销毁')\n                this.touchChess.x = X;\n                this.touchChess.y = Y;\n            }\n\n        } else {\n            cc.log('不销毁')\n            this.touchChess.x = X;\n            this.touchChess.y = Y;\n        }\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});"]}